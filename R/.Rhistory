dataFlexReal[1,]$result
strsplit(dataFlexReal[1,]$result, ", ")
strsplit(as.character(dataFlexReal[1,]$result), ", ")
unique(strsplit(as.character(dataFlexReal[1,]$result), ", "),strsplit(as.character(dataFlexReal[2,]$result), ", "))
unique(strsplit(as.character(dataFlexReal[1,]$result), ", "),strsplit(as.character(dataFlexReal[20,]$result), ", "))
unique(strsplit(as.character(dataFlexReal[1,]$result), ", "),strsplit(as.character(dataFlexReal[200,]$result), ", "))
c<-c(strsplit(as.character(dataFlexReal[1,]$result), ", "),strsplit(as.character(dataFlexReal[200,]$result), ", "))
duplicated(c)
intersect_all <- function(a,b,...){
Reduce(intersect, list(a,b,...))
}
intersect_all(strsplit(as.character(dataFlexReal[1,]$result), ", "),strsplit(as.character(dataFlexReal[200,]$result), ", "))
data = read.csv("./flex-gen.csv", header = TRUE,sep='|')
data$time=data$end-data$start
View(data)
View(data)
minCalculation <- function(model,product,dataset){
subset <- mydata[ which(dataset$model==model
& dataset$product == product), ]
result <-  min(subset$precision)
return(result)
}
data$min <- minCalculation(data$model, data$product, data)
minCalculation <- function(model,product,dataset){
subset <- dataset[ which(dataset$model==model
& dataset$product == product), ]
result <-  min(subset$precision)
return(result)
}
data$min <- minCalculation(data$model, data$product, data)
intersect_all <- function(a,b,...){
Reduce(intersect, list(a,b,...))
}
minCalculation <- function(model,product,dataset){
subset <- dataset[ which(dataset$model==model & dataset$product == product), ]
result <-  min(subset$precision)
return(result)
}
#------------- dataFlexGen----------
data = read.csv("./flex-gen.csv", header = TRUE,sep='|')
data$time=data$end-data$start
data$resultSize <- str_count(data$result, ",")+1
data$min <- minCalculation(data$model, data$product, data)
minCalculation <- function(model,product,dataset){
subset <- dataset[ which(dataset$model==model & dataset$product == product), ]
result <-  min(subset$resultSize)
return(result)
}
data$min <- minCalculation(data$model, data$product, data)
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
data$min <- minCalculation(data$model, data$product, data)
debugSource('~/Repositorios/FlexDiag/R/script.R')
data$min <- minCalculation(data$model, data$product, data)
data$min <- minCalculation(data$model, data$product, data)
print(model)
minCalculation <- function(model,product,dataset){
print(model)
subset <- dataset[ which(dataset$model==model & dataset$product == product), ]
result <-  min(subset$resultSize)
return(result)
}
data$min <- minCalculation(data$model, data$product, data)
minCalculation <- function(model,product,dataset){
print(model)
print(product)
subset <- dataset[ which(dataset$model==model & dataset$product == product), ]
result <-  min(subset$resultSize)
return(result)
}
data$min <- minCalculation(data$model, data$product, data)
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
setwd("~/Repositorios/FlexDiag/R")
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
subset <- dataset[ which(dataset$model==model & dataset$product == product), ]
result <-  min(subset$resultSize)
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
minCalculation <- function(x,dataset){
subset <- dataset[ which(dataset$model==x$model & dataset$product == x$product), ]
result <-  min(subset$resultSize)
return(result)
}
apply(data,1,minCalculation)
apply(data,1,minCalculation,dataset)
apply(data,1,minCalculation,data)
apply(data,1,minCalculation,dataset=data)
apply(data,1,minCalculation,dataset=data)
mapply(data,1,minCalculation,dataset=data)
source('~/Repositorios/FlexDiag/R/script.R')
data$min <- apply(data,1, minCalculation)
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
warnings()
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
View(data)
View(data)
source('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
union(strsplit(data$result, ", "),strsplit(data$min, ", "))
test<-union(strsplit(data$result, ", "),strsplit(data$min, ", "))
data$accuracy <- union(strsplit(data$result, ", "),strsplit(data$min, ", "))
source('~/Repositorios/FlexDiag/R/script.R')
data$accuracy <- dim(union(strsplit(data$result, ", "),strsplit(data$min, ", ")))
source('~/Repositorios/FlexDiag/R/script.R')
View(data)
View(intersect_all)
source('~/Repositorios/FlexDiag/R/script.R')
View(data)
data$accuracy <- dim(union(strsplit(data$result, ", "),strsplit(data$min, ", ")))
data$accuracy = dim(union(strsplit(data$result, ", "),strsplit(data$min, ", ")))
View(data)
data$accuracy <- dim(union(strsplit(data$result, ", "),strsplit(data$min, ", ")))/data$minSize
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(accuracy)
accuracy <- function(x){
paramA<-trsplit(x$result, ", ");
#  dim(union(,strsplit(data$min, ", ")))/data$minSize
}
data = read.csv("./flex-gen.csv", header = TRUE,sep='|')
data$result=str_sub(data$result, 2, str_length(data$result)-1)
data$time=data$end-data$start
data$resultSize <- str_count(data$result, ",")+1
data$minSize <- apply(data,1, minSizeCalculation)
data$min<-apply(data,1,minCalculation)
data$minimality <- data$minSize / data$resultSize
data$accuracy <-apply(data,1,accuracy)
debugSource('~/Repositorios/FlexDiag/R/script.R')
dim(union(strsplit(data$result, ", "),strsplit(data$min, ", ")))
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
View(data)
source('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
strsplit(data[1,]$result, ", ")
a<-strsplit(data[1,]$result, ", ")
b<-strsplit(data[1,]$min, ", ")
c<-union(a,b)
dim(c)
a<-c(strsplit(data[1,]$result, ", "))
length(c)
length(b)
a<-strsplit(data[1,]$result, ", ", fixed=TRUE)
length(c)
a
length(a)
count(a)
strsplit(data[1,]$result, ", ", fixed=TRUE)
strsplit(data[1,]$result, ", ", fixed=TRUE)
strsplit(as.character(data[1,]$result), ", ", fixed=TRUE)
a<-strsplit(as.character(data[1,]$result), ", ", fixed=TRUE)
length(a[[1]])
data$accuracy<-length(union(strsplit(as.character(data$result), ", ", fixed=TRUE),
strsplit(as.character(data$result), ", ", fixed=TRUE))[[1]])/data$minSize
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(x)
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(subset)
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
View(dataMZ)
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
adply(data,1, minSizeCalculation,.expand=T)$V1
debugSource('~/Repositorios/FlexDiag/R/script.R')
debugSource('~/Repositorios/FlexDiag/R/script.R')
t<-adply(data,1,minCalculation,.expand = T)
debugSource('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
source('~/Repositorios/FlexDiag/R/script.R')
View(data)
plotData <- summaryBy(time + precision~ features + m, data = dataFlexGen,
FUN = function(x) { c(mean = mean(x)) } )
plotData <- summaryBy(time + precision~ features + m, data = data,
FUN = function(x) { c(mean = mean(x)) } )
plotData <- summaryBy(time + minimality + accuracy~ features + m, data = data,
FUN = function(x) { c(mean = mean(x)) } )
View(plotData)
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10("Time in milliseconds (log scale)") +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10("Time in milliseconds (log scale)") +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
data$time=data$end-data$start
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10("Time in milliseconds (log scale)") +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), color=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10("Time in milliseconds (log scale)") +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_continuous("Time in milliseconds (log scale)") +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_continuous("Time in milliseconds (log scale)") +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
coord_trans(y = "log10")+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_continuous("Time in milliseconds (log scale)",breaks=20) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
coord_trans(y = "log10")+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_continuous(breaks = pretty(plotData$time.mean, n = 10),label="Time in milliseconds (log scale)") +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
coord_trans(y = "log10")+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_continuous(breaks = pretty(plotData$time.mean, n = 10)) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
coord_trans(y = "log10")+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(breaks = pretty(plotData$time.mean, n = 10)) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(breaks = pretty(plotData$time.mean, n = 5)) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(breaks = pretty(plotData$time.mean, n = 5)) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
annotation_logticks() +
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))
) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
annotation_logticks() +
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))
) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
annotation_logticks(sides = "l") +
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
install.packages("xtable")
xtable(plotData)
library(xtable)
xtable(plotData)
xtable(plotData, digits = 0)
xtable(plotData, include.rownames = FALSE)
xtable(plotData, include.rownames = FALSE)
xtable(plotData, include.rownames = FALSE)
xtable(plotData, include.rownames=FALSE)
print(xtable(plotData), include.rownames=FALSE)
#generate plot m vs time
featuresMGraphTime<-ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))
) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
annotation_logticks(sides = "l") +
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggsave("featuresMGraphTime.pdf",  width = 12)
#generate plot m vs minimality
featuresMGraphMinimality<-ggplot(plotData, aes(x = as.numeric(m), y = minimality.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))
) +
geom_point(mapping=aes(x=as.numeric(m), y=minimality.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
annotation_logticks(sides = "l") +
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggsave("featuresMGraphMinimality.pdf",  width = 12)
#generate plot m vs time
featuresMGraphTime<-ggplot(plotData, aes(x = as.numeric(m), y = time.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
scale_y_log10(
breaks = scales::trans_breaks("log10", function(x) 10^x),
labels = scales::trans_format("log10", scales::math_format(10^.x))
) +
geom_point(mapping=aes(x=as.numeric(m), y=time.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Time in milliseconds (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
annotation_logticks(sides = "l") +
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggsave("featuresMGraphTime.pdf",  width = 12)
#generate plot m vs minimality
featuresMGraphMinimality<-ggplot(plotData, aes(x = as.numeric(m), y = minimality.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
geom_point(mapping=aes(x=as.numeric(m), y=minimality.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Minimality (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggsave("featuresMGraphMinimality.pdf",  width = 12)
#generate plot m vs accuracy
featuresMGraphMinimality<-ggplot(plotData, aes(x = as.numeric(m), y = accuracy.mean))  +
theme_bw() +
geom_line(aes(linetype=factor(features)),stat = "identity") +
geom_point(mapping=aes(x=as.numeric(m), y=accuracy.mean, shape=factor(features)), size=3)+
scale_linetype_discrete(guide=FALSE)+
scale_shape_discrete()+
xlab("Value of m") +
ylab("Accuracy (log scale)") +
labs(shape = "Number of features")+
theme(legend.position="bottom",legend.text=element_text(size=15)) +
scale_x_continuous(breaks=c(1,2,4,6,10)) + theme(aspect.ratio=0.45)+
theme(text = element_text(size=13),axis.text.x = element_text(angle=60, hjust=1))+guides(shape=guide_legend(nrow=1,byrow=TRUE))
ggsave("featuresMGraphAccuracy.pdf",  width = 12)
